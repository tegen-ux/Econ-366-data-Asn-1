demo()
q()
library(janitor)
install.packages("shiny")
install.packages("learnr")
library(crayon)
library(compiler)
detach("package:compiler", unload = TRUE)
install.packages(c("cluster", "foreign", "lattice", "Matrix", "mgcv", "nlme", "rpart"))
install.packages("tidyverse")
install.packages("janitor")
print('Hello')
library(tidyverse)
library(janitor)
head(ghg_data)
library(tidyverse)
library(janitor)
library(tidyverse)
library(janitor)
library(tidyverse)
library(janitor)
library(tidyverse)
library(janitor)
library(tidyverse)
library(janitor)
# I'm giving it a simpler name ghg_data.csv
# old link was"https://data.ec.gc.ca/data/substances/monitor/canada-s-official-greenhouse-gas-inventory/B-Economic-Sector/EN_GHG_Econ_Can_Prov_Terr.csv",
# mode= wb is "windows binary" and works more reliably than the default in my experience
download.file(
"https://data-donnees.az.ec.gc.ca/api/file?path=/substances%2Fmonitor%2Fcanada-s-official-greenhouse-gas-inventory%2FB-Economic-Sector%2FEN_GHG_Econ_Can_Prov_Terr.csv",
destfile = "ghg_data.csv",mode="wb")
ghg_data<-read.csv("ghg_data.csv") %>% clean_names()
head(ghg_data)
View(ghg_data)
View(ghg_data)
#talk yourself through it
# ghg_data is equal to ghg_data with co2eq converted to a numeric variable
ghg_data<-ghg_data %>% mutate(co2eq=as.numeric(co2eq))
#talk yourself through it
# ghg_data is equal to ghg_data with co2eq converted to a numeric variable
ghg_data<-ghg_data %>% mutate(co2eq=as.numeric(co2eq))
library(tidyverse)
library(janitor)
# I'm giving it a simpler name ghg_data.csv
# old link was"https://data.ec.gc.ca/data/substances/monitor/canada-s-official-greenhouse-gas-inventory/B-Economic-Sector/EN_GHG_Econ_Can_Prov_Terr.csv",
# mode= wb is "windows binary" and works more reliably than the default in my experience
download.file(
"https://data-donnees.az.ec.gc.ca/api/file?path=/substances%2Fmonitor%2Fcanada-s-official-greenhouse-gas-inventory%2FB-Economic-Sector%2FEN_GHG_Econ_Can_Prov_Terr.csv",
destfile = "ghg_data.csv",mode="wb")
ghg_data<-read.csv("ghg_data.csv") %>% clean_names()
head(ghg_data)
#talk yourself through it
# ghg_data is equal to ghg_data with co2eq converted to a numeric variable
ghg_data<-ghg_data %>% mutate(co2eq=as.numeric(co2eq))
ghg_data<-ghg_data %>% mutate(co2eq=as.numeric(co2eq))
library(tidyverse)
library(janitor)
# I'm giving it a simpler name ghg_data.csv
# old link was"https://data.ec.gc.ca/data/substances/monitor/canada-s-official-greenhouse-gas-inventory/B-Economic-Sector/EN_GHG_Econ_Can_Prov_Terr.csv",
# mode= wb is "windows binary" and works more reliably than the default in my experience
download.file(
"https://data-donnees.az.ec.gc.ca/api/file?path=/substances%2Fmonitor%2Fcanada-s-official-greenhouse-gas-inventory%2FB-Economic-Sector%2FEN_GHG_Econ_Can_Prov_Terr.csv",
destfile = "ghg_data.csv",mode="wb")
ghg_data<-read.csv("ghg_data.csv") %>% clean_names()
head(ghg_data)
#talk yourself through it
# ghg_data is equal to ghg_data with co2eq converted to a numeric variable
ghg_data<-ghg_data %>% mutate(co2eq=as.numeric(co2eq))
ghg_data<-ghg_data %>% mutate(co2eq=as.numeric(co2eq))
ab_ghs<-ghg_data%>% filter(region=="Alberta",source=="Provicial Inventory Total")%>%
select((year,region,source,co2eq))
#talk yourself through it
# ab_ghgs is equal to ghg_data passed through a filter to catch only the observations that meet these conditions...
ab_ghgs<-ghg_data %>% filter(region=="Alberta",source=="Provincial Inventory Total")%>%
#and then we'll select four columns
select(year,region,source,co2eq)
View(ab_ghgs)
#ggplot is part of the tidyverse
ggplot(ab_ghgs)+ #create a plot
#add a line graph "geom"
geom_line(aes(x=year,y=co2eq))
#ggplot is part of the tidyverse
ggplot(ab_ghgs)+ #create a plot
#add a line graph "geom"
geom_line(aes(year,co2eq))+
#fix the x scales so that they don't add buffer spaces
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
expand_limits(y=c(0,300))+ #make sure the y axis goes to zero
#now add some titles
labs(title="Alberta's GHG Emissions",
subtitle="Source: Canada's Official Greenhouse Gas Inventory, 2023",
x="",
y="Emissions (Mt)")
install.packages(c("digest", "glue", "Matrix", "Rcpp", "readr", "reprex", "rlang"))
library(tidyverse)
library(janitor)
library(tidyverse)
getwd
getwd()
cd()
cd
library(tidyverse)
library(janitor)
# I'm giving it a simpler name ghg_data.csv
# old link was"https://data.ec.gc.ca/data/substances/monitor/canada-s-official-greenhouse-gas-inventory/B-Economic-Sector/EN_GHG_Econ_Can_Prov_Terr.csv",
# mode= wb is "windows binary" and works more reliably than the default in my experience
download.file(
"https://data-donnees.az.ec.gc.ca/api/file?path=/substances%2Fmonitor%2Fcanada-s-official-greenhouse-gas-inventory%2FB-Economic-Sector%2FEN_GHG_Econ_Can_Prov_Terr.csv",
destfile = "ghg_data.csv",mode="wb")
# destfile is bascially just a variable declairation
ghg_data<-read.csv("ghg_data.csv") %>% clean_names()
View(ghg_data)
View(ghg_data)
View(ghg_data)
gc()
head(ghg_data_data)
head(ghg_data)
tail(ghg_data)
ab_ghgs<-ghg_data %>% filter(region=="Alberta",source=="Provincial Inventory Total")%>%
#and then we'll select four columns
select(year,region,source,co2eq)
View(ab_ghgs)
head((ab_ghgs))
tail((ab_ghgs))
describe_class(ab_ghgs)
describe_class(ab_ghgs$co2eq)
ab_ghgs<-ghg_data %>% filter(region=="Alberta",source=="Provincial Inventory Total")%>%
#and then we'll select four columns
select(year,region,source,co2eq)
mutate(co2eq=as.numeric(co2eq))
ab_ghgs<-ghg_data %>% filter(region=="Alberta",source=="Provincial Inventory Total")%>%
#and then we'll select four columns
select(year,region,source,co2eq)
mutate(co2eq=as.numeric(co2eq))
mutate(co2eq=as.numeric(co2eq))
ab_ghgs<-ab_ghgs %>% mutate(co2eq=as.numeric(co2eq))
ghg_data<-ghg_data%>%mutate(co2eq=as.numeric(co2eq))
ggplot(ab_ghgs)+ #create a plot
geom_line(aes(x=year,y=co2eq))
ggplot(ab_ghgs)+ #create a plot
geom_line(aes(x=year,y=co2eq,colour = "dodgerblue")) #aes - aestetics of that line
ggplot(ab_ghgs)+ #create a plot
geom_line(aes(x=year,y=co2eq,colour = "dodgerblue",linewidth=1.25)) #aes - aestetics of that line
ggplot(ab_ghgs)+ #create a plot
geom_line(aes(x=year,y=co2eq,colour = "rainbow",linewidth=1.25)) #aes - aestetics of that line
ggplot(ab_ghgs)+ #create a plot
geom_line(aes(x=year,y=co2eq,colour = "black",linewidth=1.25)) #aes - aestetics of that line
ggplot(ab_ghgs)+ #create a plot
geom_line(aes(x=year,y=co2eq,colour="black",linewidth=1.25)) #aes - aestetics of that line
ggplot(ab_ghgs)+ #create a plot
geom_line(aes(x=year,y=co2eq)colour="black",linewidth=1.25)+ #aes - aestetics of that line
ggplot(ab_ghgs)+ #create a plot
geom_line(aes(x=year,y=co2eq)colour="black",linewidth=1.25) #aes - aestetics of that line
#ggplot is part of the tidyverse
ggplot(ab_ghgs)+ #create a plot
#add a line graph "geom"
geom_line(aes(year,co2eq))+
#fix the x scales so that they don't add buffer spaces
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
expand_limits(y=c(0,300))+ #make sure the y axis goes to zero
#now add some titles
labs(title="Alberta's GHG Emissions",
subtitle="Source: Canada's Official Greenhouse Gas Inventory, 2023",
x="",
y="Emissions (Mt)")
#ggplot is part of the tidyverse
ggplot(ab_ghgs)+ #create a plot
#add a line graph "geom"
geom_line(aes(year,co2eq),colour="red")+
#fix the x scales so that they don't add buffer spaces
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
expand_limits(y=c(0,300))+ #make sure the y axis goes to zero
#now add some titles
labs(title="Alberta's GHG Emissions",
subtitle="Source: Canada's Official Greenhouse Gas Inventory, 2023",
x="",
y="Emissions (Mt)")
ggplot(ab_ghgs)+ #create a plot
#add a line graph "geom"
geom_line(aes(year,co2eq),colour="dodgerblue")+
#fix the x scales so that they don't add buffer spaces
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
expand_limits(y=c(0,300))+ #make sure the y axis goes to zero
#now add some titles
labs(title="Alberta's GHG Emissions",
subtitle="Source: Canada's Official Greenhouse Gas Inventory, 2023",
x="",
y="Emissions (Mt)")
install.packages("Matrix")
#ggplot is part of the tidyverse
ggplot(ab_ghgs)+ #create a plot
#add a line graph "geom"
geom_line(aes(year,co2eq),colour="dodgerblue")+
#fix the x scales so that they don't add buffer spaces
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
expand_limits(y=c(0,300))+ #make sure the y axis goes to zero
#now add some titles
labs(title="Alberta's GHG Emissions",
subtitle="Source: Canada's Official Greenhouse Gas Inventory, 2023",
x="",
y="Emissions (Mt)")+
NULL
#ggplot is part of the tidyverse
ggplot(ab_ghgs)+ #create a plot
#add a line graph "geom"
geom_line(aes(year,co2eq),colour="dodgerblue")+
#fix the x scales so that they don't add buffer spaces
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
expand_limits(y=c(0,300))+ #make sure the y axis goes to zero
#now add some titles
labs(title="Alberta's GHG Emissions",
subtitle="Source: Canada's Official Greenhouse Gas Inventory, 2023",
x="Year",
y="Emissions (Mt)")+
NULL
#ggplot is part of the tidyverse
ggplot(ab_ghgs)+ #create a plot
#ggplot is part of the tidyverse
ggplot(ab_ghgs)+ #create a plot
#add a line graph "geom"
geom_line(aes(year,co2eq),colour="dodgerblue")+
#fix the x scales so that they don't add buffer spaces
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
expand_limits(y=c(0,300))+ #make sure the y axis goes to zero
#now add some titles
labs(title="Alberta's GHG Emissions",
subtitle="Source: Canada's Official Greenhouse Gas Inventory, 2023",
x="Year",
y=" Greenhouse Gas Emissions (Mt)")+
NULL
#ggplot is part of the tidyverse
ggplot(ab_ghgs)+ #create a plot
#add a line graph "geom"
geom_line(aes(year,co2eq),colour="dodgerblue")+
#fix the x scales so that they don't add buffer spaces
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
expand_limits(y=c(0,300))+ #make sure the y axis goes to zero
#now add some titles
labs(title="Alberta's GHG Emissions",
subtitle="Source: Canada's Official Greenhouse Gas Inventory, 2023",
x="",
y="Emissions (Mt)")+
NULL
#ggplot is part of the tidyverse
ggplot(ab_ghgs)+ #create a plot
#add a line graph "geom"
geom_line(aes(year,co2eq),colour="dodgerblue")+
#fix the x scales so that they don't add buffer spaces
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
expand_limits(y=c(0,300))+ #make sure the y axis goes to zero
#now add some titles
labs(title="Alberta's GHG Emissions",
subtitle="Source: Canada's Official Greenhouse Gas Inventory, 2023",
x="Year",
y="Greenhouse Gas Emissions (Mt)")+
NULL
#ggplot is part of the tidyverse
ggplot(ab_ghgs)+ #create a plot
#add a line graph "geom"
geom_line(aes(year,co2eq),colour="dodgerblue")+
#fix the x scales so that they don't add buffer spaces
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
expand_limits(y=c(0,300))+ #make sure the y axis goes to zero
#now add some titles
labs(title="Alberta's GHG Emissions",
subtitle="Source: Canada's Official Greenhouse Gas Inventory, 2023",
x="Year",
y="Greenhouse Gas Emissions (Mt)")+
theme_minimal()+
NULL
read.csv("ghg_data.csv") %>% clean_names()>%> #assigning ghg_data and also cleaing the data
read.csv("ghg_data.csv") %>% clean_names()>%> #assigning ghg_data and also cleaing the data
read.csv("ghg_data.csv") %>% clean_names()>%> #assigning ghg_data and also cleaing the data
read.csv("ghg_data.csv") %>% clean_names()>%> #assigning ghg_data and also cleaing the data
read.csv("ghg_data.csv") %>% clean_names()>%> #assigning ghg_data and also cleaing the data
read.csv("ghg_data.csv") %>% clean_names()>%>
ghg_data<-read.csv("ghg_data.csv") %>% clean_names() #assigning ghg_data and also cleaing the data
read.csv("ghg_data.csv") %>% clean_names()>%>
read.csv("ghg_data.csv") %>% clean_names()>%>
read.csv("ghg_data.csv") %>% clean_names()
read.csv("ghg_data.csv") %>% clean_names()
filter(region=="Ontario",source=="Provincial Inventory Total")%>%
#and then we'll select four columns
select(year,region,source,co2eq)>%>
read.csv("ghg_data.csv") %>% clean_names()>%>
read.csv("ghg_data.csv") %>% clean_names()>%>filter(region=="Ontario",source=="Provincial Inventory Total")%>%
read.csv("ghg_data.csv") %>% clean_names()>%>filter(region=="Ontario",source=="Provincial Inventory Total")%>%
read.csv("ghg_data.csv") %>% clean_names()>%>
#Grab AB data - using select to grab the columns we want
ab_ghgs<-ghg_data %>% filter(region!="Alberta",source=="Provincial Inventory Total")%>%
#and then we'll select four columns
select(year,region,source,co2eq)
View(ab_ghgs)
#ggplot is part of the tidyverse
ggplot(ab_ghgs)+ #create a plot
#add a line graph "geom"
geom_line(aes(year,co2eq),colour="dodgerblue")+
facet_wrap(~region,nrow=1)+
#fix the x scales so that they don't add buffer spaces
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
expand_limits(y=c(0,300))+ #make sure the y axis goes to zero
#now add some titles
labs(title="Alberta's GHG Emissions",
subtitle="Source: Canada's Official Greenhouse Gas Inventory, 2023",
x="Year",
y="Greenhouse Gas Emissions (Mt)")+
theme_minimal()+
NULL
library(tidyverse)
library(janitor)
# I'm giving it a simpler name ghg_data.csv
# old link was"https://data.ec.gc.ca/data/substances/monitor/canada-s-official-greenhouse-gas-inventory/B-Economic-Sector/EN_GHG_Econ_Can_Prov_Terr.csv",
# mode= wb is "windows binary" and works more reliably than the default in my experience
download.file(
"https://data-donnees.az.ec.gc.ca/api/file?path=/substances%2Fmonitor%2Fcanada-s-official-greenhouse-gas-inventory%2FB-Economic-Sector%2FEN_GHG_Econ_Can_Prov_Terr.csv",
destfile = "ghg_data.csv",mode="wb")
# destfile is bascially just a variable declairation
ghg_data<-read.csv("ghg_data.csv") %>% clean_names() #assigning ghg_data and also cleaing the data
#Grab AB data - using select to grab the columns we want
ab_ghgs<-ghg_data %>% filter(region!="Canada",source=="Provincial Inventory Total")%>%
#and then we'll select four columns
select(year,region,source,co2eq)
ab_ghgs<-ab_ghgs %>% mutate(co2eq=as.numeric(co2eq))
ghg_data<-ghg_data%>%mutate(co2eq=as.numeric(co2eq))
#ggplot is part of the tidyverse
ggplot(ab_ghgs)+ #create a plot
#add a line graph "geom"
geom_line(aes(year,co2eq),colour="dodgerblue")+
facet_wrap(~region,nrow=1)+
#fix the x scales so that they don't add buffer spaces
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
expand_limits(y=c(0,300))+ #make sure the y axis goes to zero
#now add some titles
labs(title="Alberta's GHG Emissions",
subtitle="Source: Canada's Official Greenhouse Gas Inventory, 2023",
x="Year",
y="Greenhouse Gas Emissions (Mt)")+
theme_minimal()+
NULL
install.packages("scales")
install.packages("kableExtra")
install.packages(c("DBI", "MASS", "ps", "timechange", "uuid", "withr"))
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
setwd("/Users/tegen/Documents/Econ-366-R/data_asn_1")
